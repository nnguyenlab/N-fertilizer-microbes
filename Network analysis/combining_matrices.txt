#THIS IS SET UP SO THAT YOU MAKE TWO FILTERED PHYLOSEQ OBJECTS LIKE IN THE SPIECEASI CODE
#ONE FOR BACTERIA, ONE FOR FUNGI. ORDER DOES NOT MATTER


library(SpiecEasi)
library(seqtime)
library(phyloseq)
#Code was borrowed from Raes lab and SpiecEasi Manual
#sets output path for borrowed code. Must manually enter samples in both sets to same IDs in json biom file
biom.path <- file.choose()

#creates phyloseq object from json
phyloseqobj=import_biom(biom.path)
otus=otu_table(phyloseqobj)
taxa=tax_table(phyloseqobj)

#filters object. minimum occurrence. creates "dummy" matrix from 0s
#6 is chosen as minimal occurence because 1/3 of samples
filterobj=filterTaxonMatrix(otus,minocc=6,keepSum = TRUE, return.filtered.indices = TRUE) 
otus.f=filterobj$mat
taxa.f=taxa[setdiff(1:nrow(taxa),filterobj$filtered.indices),]
dummyTaxonomy=c("k__dummy","p__","c__","o__","f__","g__","s__")
taxa.f=rbind(taxa.f,dummyTaxonomy)
rownames(taxa.f)[nrow(taxa.f)]="0"
rownames(otus.f)[nrow(otus.f)]="0"

updatedotus=otu_table(otus.f, taxa_are_rows = TRUE)
updatedtaxa=tax_table(taxa.f)
phyloseqobj.f=phyloseq(updatedtaxa, updatedotus)

#finished but can write new otu tables if want to see in excel
write.table(updatedotus,file="bac_compost_table_forcombining.txt",sep="\t", quote=FALSE)
#=====
#now for the second phyloseq object (fungi)
biom.path2 <- file.choose()

#creates phyloseq object from json
phyloseqobj2=import_biom(biom.path2)
otus2=otu_table(phyloseqobj2)
taxa2=tax_table(phyloseqobj2)

#filters object. minimum occurrence. creates "dummy" matrix from 0s
filterobj2=filterTaxonMatrix(otus2,minocc=6,keepSum = TRUE, return.filtered.indices = TRUE)
otus.f2=filterobj2$mat
taxa.f2=taxa2[setdiff(1:nrow(taxa2),filterobj2$filtered.indices),]
dummyTaxonomy2=c("k__dummy","p__","c__","o__","f__","g__","s__")
taxa.f2=rbind(taxa.f2,dummyTaxonomy2)
rownames(taxa.f2)[nrow(taxa.f2)]="0.0"
rownames(otus.f2)[nrow(otus.f2)]="0.0"

updatedotus2=otu_table(otus.f2, taxa_are_rows = TRUE)
updatedtaxa2=tax_table(taxa.f2)
phyloseqobj.f2=phyloseq(updatedtaxa2, updatedotus2)

#finished but can write new otu tables if want to see in excel
write.table(updatedotus2,file="fun_compost_table_forcombining.txt",sep="\t", quote=FALSE)
#must transpose table after before plugging into multi spiec
#=========


#MAKING THE COMBINED NETWORK

combined<- multi.spiec.easi(list(phyloseqobj.f,phyloseqobj.f2), pulsar.params = list(thresh = 0.05), lambda.min.ratio=1e-2, method = "mb", sel.criterion = "stars",
                 verbose = TRUE, pulsar.select = TRUE)
#NEED TO MAKE NEW LABELING SYSTEM FOR PULLING INFO OUT OF IGRAPH
#Create objects from phyloseq taxa info. Turn objects into a vector. Add vector as vertex.attr for igraph


#Must merge phyloseq objects
phyloseq.combined = merge_phyloseq(phyloseqobj.f,phyloseqobj.f2)


#graph doesn't look pretty but info can be exported for Cytoscape
graph.mb=adj2igraph(getRefit(combined), vertex.attr=list(name=taxa_names(phyloseq.combined)))

plot_network(graph.mb)

#FOR FILTERING THE NEGATIVE INTERACTIONS
#Filtering positive
betaMat=as.matrix(symBeta(getOptBeta(combined)))

otu.ids=colnames(combined$est$data)
edges=E(graph.mb)

filtered.edges=c()
for(e.index in 1:length(edges)){
  adj.nodes=ends(graph.mb,edges[e.index])
  xindex=which(otu.ids==adj.nodes[1])
  yindex=which(otu.ids==adj.nodes[2])
  beta=betaMat[xindex,yindex]
  if(beta<0){
    filtered.edges=c(filtered.edges,edges[e.index])
  }
}

graph.mb.pos=delete_edges(graph.mb, filtered.edges)


#WRITING OUT THE FINAL NETWORK GRAPH FOR IMPORTING INTO CYTOSCAPE
output.path="/Users/nguyenlab/Desktop/Steven/Directory/"
write.graph(graph.mb.pos,file=file.path(output.path,"spieceasi.combined_urea.txt"),format="ncol") 


#Grabbing taxa tables
write.table(taxa.f,file=file.path(output.path,"___"),sep="\t", quote=FALSE)
write.table(taxa.f2,file=file.path(output.path,"___"),sep="\t", quote=FALSE)